version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    hostname: hostdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-p102030}
      PGDATA: /data/postgres
    volumes:
      - "./shared/postgres/data/postgres:/data/postgres"
      - "./shared/postgres/var/lib/postgresql/data:/var/lib/postgresql/data"
      - "./shared/postgres/var/lib/postgresql/data/pgdata:/var/lib/postgresql/data/pgdata"
      - "./schemas:/schemas"
    ports:
      - "5432:5432"
    networks:
      - environment_dev
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - environment_dev
    restart: unless-stopped
    depends_on:
      - postgres

  sonarqube:
    container_name: sonar_community
    image: sonarqube:8.8-community
    depends_on:
      - postgres
    ulimits:
      memlock:
        soft: -1 
        hard: -1
    ports:
      - "9000:9000"
    networks:
      - environment_dev
#    restart: unless-stopped
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: p102030
    volumes:
      - "./shared/sonarqube/opt/sonarqube/data:/opt/sonarqube/data"
      - "./shared/sonarqube/opt/sonarqube/extensions:/opt/sonarqube/extensions"
      - "./shared/sonarqube/opt/sonarqube/logs:/opt/sonarqube/logs"
      - "./shared/sonarqube/opt/sonarqube/temp:/opt/sonarqube/temp"

  traefik:
    image: library/traefik:alpine
    container_name: traefik
    volumes:
      - "./shared/traefik/var/run/docker.sock:/var/run/docker.sock"
    command: >
      --logLevel=ERROR
      --api.dashboard
      --docker
      --entrypoints="Name:http Address::80"
      --defaultentrypoints="http"
    ports:
      - 81:80
      - 3000:8080
    depends_on:
      - postgres
#    restart: unless-stopped
    networks:
      - environment_dev

  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak 
      DB_USER: postgres
      DB_PASSWORD: p102030
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: p102030
      # KEYCLOAK_LOGLEVEL: DEBUG
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    depends_on:
      - postgres
      - traefik
    networks:
      - environment_dev
    labels:
      traefik.enable: "true"
      traefik.port: 8080
      traefik.protocol: http
      traefik.frontend.rule: Host:localhost
      traefik.frontend.passHostHeader: "true"
    ports:
      - 8180:8080
      - 8543:8443

  mongo:
    image: mongo
    container_name: mongo
#    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: p102030
    networks:
      - environment_dev
    
  mongo-express:
    image: mongo-express
    container_name: mongo-express
#   restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: p102030
    depends_on:
      - mongo
    networks:
      - environment_dev
    
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
#   restart: unless-stopped
    hostname: rabbitmq-dev
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-admin}
    volumes:
      - ./shared/rabbitmq/etc/:/etc/rabbitmq/
      - ./shared/rabbitmq/data/:/var/lib/rabbitmq/
      - ./shared/rabbitmq/logs/:/var/log/rabbitmq/
      - ./config/enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - environment_dev
    
    
networks:
  environment_dev:
    driver: bridge

volumes:
  shared: {}
  schemas: {}
    

version: "3.4"

networks:
  dev_network:
    driver: bridge
    external: true

volumes:
  shared: {}
  schemas: {}

services:
  traefik:
    image: library/traefik:alpine
    container_name: traefik
    volumes:
      - "./shared/traefik/var/run/docker.sock:/var/run/docker.sock"
    command: >
      --logLevel=ERROR
      --api.dashboard
      --docker
      --entrypoints="Name:http Address::80"
      --defaultentrypoints="http"
    ports:
      - 81:80
      - 3000:8080
    #    restart: unless-stopped
    networks:
      - dev_network

  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: hostdb2
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: p102030
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: p102030
      # KEYCLOAK_LOGLEVEL: DEBUG
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    depends_on:
      - traefik
    networks:
      - dev_network
    labels:
      traefik.enable: "true"
      traefik.port: 8080
      traefik.protocol: http
      traefik.frontend.rule: Host:localhost
      traefik.frontend.passHostHeader: "true"
    ports:
      - 8180:8080
      - 8543:8443

version: "3.5"

services:
  postgres:
    container_name: postgres
    image: postgres:12.6
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-p102030}
      PGDATA: /data/postgres
    volumes:
      - "./data/postgres-data:/data/postgres"
      - "./data/postgres:/var/lib/postgresql/data"
      - "./data/pgdata:/var/lib/postgresql/data/pgdata"
      - "./schemas:/schemas"
    ports:
      - "5432:5432"
    networks:
      - network-postgre
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:5.0
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - network-postgre
    restart: unless-stopped
    depends_on:
      - postgres

  sonarqube:
    container_name: sonar_community
    image: sonarqube:8.7.1-community
    depends_on:
      - postgres
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9000:9000"
    networks:
      - network-postgre
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: p102030
    volumes:
      - ./sonar/sonarqube_data:/opt/sonarqube/data
      - ./sonar/sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonar/sonarqube_logs:/opt/sonarqube/logs
      - ./sonar/sonarqube_temp:/opt/sonarqube/temp
    restart: unless-stopped

  traefik:
    image: library/traefik:alpine
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      --logLevel=ERROR
      --api.dashboard
      --docker
      --entrypoints="Name:http Address::80"
      --defaultentrypoints="http"
    ports:
      - 81:80
      - 3000:8080

  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: p102030
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # KEYCLOAK_LOGLEVEL: DEBUG
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
    depends_on:
      - postgres
    networks:
      - network-postgre
    labels:
      traefik.enable: "true"
      traefik.port: 8080
      traefik.protocol: http
      traefik.frontend.rule: Host:localhost
      traefik.frontend.passHostHeader: "true"
    ports:
        - 8180:8080
    
networks:
  network-postgre:
    driver: bridge
